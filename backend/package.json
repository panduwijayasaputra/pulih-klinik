{
  "name": "backend",
  "version": "0.0.1",
  "description": "",
  "author": "",
  "private": true,
  "license": "UNLICENSED",
  "scripts": {
    "build": "nest build",
    "format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
    "start": "nest start",
    "start:dev": "nest start --watch",
    "start:debug": "nest start --debug --watch",
    "start:prod": "node dist/main",
    "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:cov": "jest --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e": "jest --config ./test/jest-e2e.json",
    "migration:create": "mikro-orm migration:create",
    "migration:up": "mikro-orm migration:up",
    "migration:down": "mikro-orm migration:down",
    "migration:list": "mikro-orm migration:list",
    "migration:check": "mikro-orm migration:check",
    "migration:pending": "mikro-orm migration:pending",
    "schema:create": "mikro-orm schema:create",
    "schema:drop": "mikro-orm schema:drop",
    "schema:update": "mikro-orm schema:update",
    "seeder:run": "mikro-orm seeder:run",
    "seeder:create": "mikro-orm seeder:create",
    "db:fresh": "mikro-orm schema:drop --run && mikro-orm schema:create --run && mikro-orm seeder:run",
    "seed:run": "node -e \"const { MikroORM } = require('@mikro-orm/core'); const config = require('./dist/config/mikro-orm.config.js').default; (async () => { const orm = await MikroORM.init(config); const em = orm.em.fork(); const { UserSeeder } = require('./dist/database/seeders/user.seeder.js'); const { TherapistSeeder } = require('./dist/database/seeders/therapist.seeder.js'); const { ClientSeeder } = require('./dist/database/seeders/client.seeder.js'); const { ConsultationSeeder } = require('./dist/database/seeders/consultation.seeder.js'); const { TherapySessionSeeder } = require('./dist/database/seeders/therapy-session.seeder.js'); console.log('üöÄ Starting database seeding...\\n'); try { await new UserSeeder().run(em); console.log('‚úÖ Users seeder completed\\n'); await new TherapistSeeder().run(em); console.log('‚úÖ Therapists seeder completed\\n'); await new ClientSeeder().run(em); console.log('‚úÖ Clients seeder completed\\n'); await new ConsultationSeeder().run(em); console.log('‚úÖ Consultations seeder completed\\n'); await new TherapySessionSeeder().run(em); console.log('‚úÖ Therapy Sessions seeder completed\\n'); console.log('‚úÖ Database seeding completed successfully!'); } catch (error) { console.error('\\n‚ùå Database seeding failed:', error); process.exit(1); } await orm.close(); })();\""
  },
  "dependencies": {
    "@mikro-orm/core": "5.9.7",
    "@mikro-orm/migrations": "5.9.7",
    "@mikro-orm/nestjs": "5.1.3",
    "@mikro-orm/postgresql": "5.9.7",
    "@mikro-orm/reflection": "5.9.7",
    "@mikro-orm/seeder": "5.9.7",
    "@nestjs/common": "^11.0.1",
    "@nestjs/config": "^4.0.2",
    "@nestjs/core": "^11.0.1",
    "@nestjs/jwt": "^11.0.0",
    "@nestjs/passport": "^11.0.5",
    "@nestjs/platform-express": "^11.0.1",
    "@nestjs/swagger": "^11.2.0",
    "@nestjs/throttler": "^6.4.0",
    "@types/bcrypt": "^6.0.0",
    "@types/multer": "^2.0.0",
    "bcrypt": "^6.0.0",
    "bcryptjs": "^3.0.2",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.2",
    "dotenv": "^17.2.1",
    "express-rate-limit": "^8.0.1",
    "helmet": "^8.1.0",
    "passport": "^0.7.0",
    "passport-jwt": "^4.0.1",
    "passport-local": "^1.0.0",
    "reflect-metadata": "^0.2.2",
    "rxjs": "^7.8.1",
    "swagger-ui-express": "^5.0.1",
    "uuid": "^11.1.0",
    "zod": "^4.0.15"
  },
  "devDependencies": {
    "@eslint/eslintrc": "^3.2.0",
    "@eslint/js": "^9.18.0",
    "@mikro-orm/cli": "5.9.7",
    "@nestjs/cli": "^11.0.0",
    "@nestjs/schematics": "^11.0.0",
    "@nestjs/testing": "^11.0.1",
    "@types/bcryptjs": "^3.0.0",
    "@types/express": "^5.0.0",
    "@types/jest": "^30.0.0",
    "@types/node": "^22.10.7",
    "@types/passport-jwt": "^4.0.1",
    "@types/passport-local": "^1.0.38",
    "@types/supertest": "^6.0.2",
    "@types/uuid": "^10.0.0",
    "eslint": "^9.18.0",
    "eslint-config-prettier": "^10.0.1",
    "eslint-plugin-prettier": "^5.2.2",
    "globals": "^16.0.0",
    "jest": "^30.0.0",
    "prettier": "^3.4.2",
    "source-map-support": "^0.5.21",
    "supertest": "^7.0.0",
    "ts-jest": "^29.2.5",
    "ts-loader": "^9.5.2",
    "ts-node": "^10.9.2",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^5.7.3",
    "typescript-eslint": "^8.20.0"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": "src",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "../coverage",
    "testEnvironment": "node"
  }
}
